@model WebNhac.Models.Playlist
@{
    ViewData["Title"] = "Player";
    var items = Model.Items.OrderBy(i => i.Order).ToList();
}

<div class="container container-narrow py-4">
    <div class="d-flex align-items-center justify-content-between mb-3">
        <h4 class="mb-0">@Model.Name</h4>
        <span class="text-muted">@items.Count bản nhạc</span>
    </div>

    <audio id="audio" controls preload="metadata" class="w-100 mb-3">
        <source src="@items.First().Song.AudioUrl" type="audio/mpeg" />
        Trình duyệt không hỗ trợ audio.
    </audio>

    <ol class="list-group" id="tracklist">
        @for (int i = 0; i < items.Count; i++)
        {
            var it = items[i];
            <li class="list-group-item d-flex justify-content-between align-items-center"
                data-src="@it.Song.AudioUrl" data-id="@it.Song.Id" data-itemid="@it.Id">
                <span><b>@(i + 1).</b> @it.Song.Title <span class="text-muted">— @it.Song.Artist?.Name</span></span>

                <div class="btn-group">
                    <!-- nút play là click vào toàn bộ li rồi, không cần thêm -->
                    <form asp-controller="Playlists" asp-action="Remove" method="post" class="ms-2">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="playlistId" value="@Model.Id" />
                        <input type="hidden" name="itemId" value="@it.Id" />
                        <button type="submit" class="btn btn-sm btn-outline-danger"
                                title="Xoá khỏi playlist" onclick="return confirm('Xoá bài này khỏi playlist?');">
                            <i class="bi bi-x-lg"></i>
                        </button>
                    </form>
                </div>
            </li>
        }
    </ol>
</div>

<script>
    (function(){
      const audio = document.getElementById('audio');
      const items = Array.from(document.querySelectorAll('#tracklist li'));
      let idx = 0, playedOnce = new Set();

      async function markPlayed(id){
        if (playedOnce.has(id)) return;
        playedOnce.add(id);
        try { await fetch(`/api/tracks/${id}/played`, { method: 'POST' }); } catch {}
      }

      function play(i){
          idx = i;
          const li = items[i];
          audio.src = li.dataset.src;
          audio.play();
          items.forEach(x => x.style.fontWeight = 'normal');
          li.style.fontWeight = 'bold';
          markPlayed(li.dataset.id);
      }

      items.forEach((li,i)=> li.onclick = ()=> play(i));
      audio.addEventListener('ended', ()=> { if (idx < items.length - 1) play(idx + 1); });
      play(0);
    })();
</script>